- id: '1688111538910'
  alias: Litière Intelligente - Incrementer passages litière
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.capteur_mouvement_litiere
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_cat_litter_box
    state: 'on'
  action:
  - service: input_number.increment
    data: {}
    target:
      entity_id: input_number.litter_tracking
  mode: single
- id: '1688112377959'
  alias: Litière Intelligente - Notifier litière pleine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_litter_full
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_cat_litter_box
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001F408  Litière"
      message: Penser a nettoyer la litière !
      callback:
      - title: Litière Nettoyée
        event: reset_litter_tracking
      icon: mdi:cat
      color: deep-orange
      persistent: true
      tag: litter_full
      until:
      - entity_id: binary_sensor.is_litter_full
        new_state: 'off'
  mode: single
- id: '1688112671844'
  alias: Litière Intelligente - Remettre à zero passages litière
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: reset_litter_tracking
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_cat_litter_box
    state: 'on'
  action:
  - service: input_number.set_value
    data:
      value: 0
    target:
      entity_id: input_number.litter_tracking
  mode: single
- id: '1688114260897'
  alias: Poubelles Intelligentes - Informer poubelle noire à sortir
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_noire
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.poubelle_noire_a_sortir
  mode: single
- id: '1688114327500'
  alias: Poubelles Intelligentes - Informer poubelle verte à sortir
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_verte
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.poubelle_verte_a_sortir
  mode: single
- id: '1688114732811'
  alias: Poubelles Intelligentes - Notifier poubelle noir non sortie
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_noire
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  - condition: state
    entity_id: input_boolean.poubelle_noire_a_sortir
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_present
      title: "\U0001F5D1 Poubelle Noire"
      message: N'oublie pas de sortir la poubelle noire
      icon: mdi:delete
      color: deep-orange
      tag: black_trash
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.poubelle_noire_a_sortir
  mode: single
- id: '1688114808231'
  alias: Poubelles Intelligentes - Notifier poubelle verte non sortie
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_verte
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  - condition: state
    entity_id: input_boolean.poubelle_verte_a_sortir
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_present
      title: ♻️ Poubelle Verte
      message: N'oublie pas de sortir la poubelle verte
      icon: mdi:recycle
      color: deep-orange
      tag: green_trash
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.poubelle_verte_a_sortir
  mode: single
- id: '1688116237944'
  alias: 'Boîte aux Lettres Intelligente - Notifier courrier '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.capteur_mouvement_boite_aux_lettres
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_mailbox
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_front_door_recently_open
    state: 'off'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001F4EC  Boite aux lettres"
      message: Vous avez du courrier !
      icon: mdi:mailbox-up
      color: green
      tag: you_got_mail
  mode: single
- id: '1688116301973'
  alias: Boîte aux Lettres Intelligente - Supprimer notification courrier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.capteur_mouvement_boite_aux_lettres
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_mailbox
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_front_door_recently_open
    state: 'on'
  action:
  - event: NOTIFIER_DISCARD
    event_data:
      tag: you_got_mail
  mode: single
- id: '1688117249626'
  alias: Boutons Hue - Bouton ON Entrée maintenu appuyé
  description: ''
  trigger:
  - device_id: 64185ca2086c2ebd7b976a43ef0c89fd
    domain: hue
    platform: device
    type: repeat
    subtype: 1
    unique_id: c1c9f277-e27a-4340-9962-2206cc0d7e3a
  condition: []
  action:
  - service: script.reset_lights_day_area
    data: {}
  mode: single
- id: '1688117356091'
  alias: Boutons Hue - Bouton OFF Entrée maintenu appuyé
  description: ''
  trigger:
  - device_id: 64185ca2086c2ebd7b976a43ef0c89fd
    domain: hue
    platform: device
    type: repeat
    subtype: 4
    unique_id: 7564eab9-3cc9-4321-890c-1b9f1465f108
  condition: []
  action:
  - service: script.leave_home
    data: {}
  mode: single
- id: '1688117431729'
  alias: Boutons Hue - Bouton ON Salon Couloir maintenu appuyé
  description: ''
  trigger:
  - device_id: efa42240bac38d83b77963e7fd5bb5ac
    domain: hue
    platform: device
    type: repeat
    subtype: 1
    unique_id: 9df3f0e5-001b-4c7b-9c5d-a96a8b391edd
  condition: []
  action:
  - service: script.reset_lights_day_area
    data: {}
  mode: single
- id: '1688117473124'
  alias: Boutons Hue - Bouton OFF Salon Couloir maintenu appuyé
  description: ''
  trigger:
  - device_id: efa42240bac38d83b77963e7fd5bb5ac
    domain: hue
    platform: device
    type: repeat
    subtype: 4
    unique_id: 73e97207-29d2-4078-8304-9e918425fe48
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.lumieres_rez_de_chaussee
      - light.exterieur
  mode: single
- id: '1688118075093'
  alias: Machine a Laver Intelligente - Notifier cycle de lavage terminé
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_washing_machine_running
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_washing_machine
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001FAE7 Machine à laver"
      message: Cycle de lavage terminé !
      icon: mdi:washing-machine
      color: green
      tag: washing_mashine_over
  mode: single
- id: '1688124199640'
  alias: Bienvenue lumineux - Allumer lumières quand porte ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_welcome_home
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.capteur_ouverture_porte_entree
      to: 'on'
    timeout:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - service: hue.activate_scene
    data:
      transition: 3
    target:
      entity_id: scene.entree_entree_100
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: hue.activate_scene
    data:
      transition: 3
    target:
      entity_id:
      - scene.salon_salon_100
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: hue.activate_scene
    data:
      transition: 3
    target:
      entity_id: scene.cuisine_cuisine_100
  mode: single
- id: '1688129246113'
  alias: Irrigation intelligente - Calculer fin arrosage
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.irrigation_switch
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.irrigation_automation
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{ now() + timedelta (minutes = states(''input_number.irrigation_time'')
        | int) }}'
    target:
      entity_id: input_datetime.end_of_irrigation
  mode: single
- id: '1688129871554'
  alias: Irrigation intelligente - Arrêter arrosage
  description: ''
  trigger:
  - platform: time
    at: input_datetime.end_of_irrigation
  condition:
  - condition: state
    entity_id: input_boolean.irrigation_automation
    state: 'on'
  - condition: state
    entity_id: switch.irrigation_switch
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.irrigation_switch
  mode: single
- id: '1688131649930'
  alias: Irrigation intelligente - Arrêter arrosage au démarrage si expiré
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.irrigation_automation
    state: 'on'
  - condition: state
    entity_id: switch.irrigation_switch
    state: 'on'
  - condition: template
    value_template: '{{ as_timestamp(now()) > state_attr(''input_datetime.end_of_irrigation'',
      ''timestamp'') }}'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.irrigation_switch
  mode: single
- id: '1688134691132'
  alias: Tesla - Notifier charge hors heures creuses
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.tesla_state
    to: charging
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: device_tracker.tesla_device_tracker
    state: home
  - condition: state
    entity_id: schedule.heures_pleines
    state: 'off'
  - condition: template
    value_template: '{{ now() + timedelta(hours = states("sensor.tesla_time_to_full_charge")
      | float) > state_attr(''schedule.heures_pleines'', ''next_event'') }}'
  action:
  - variables:
      new_target_percentage: '{{ (( states(''sensor.tesla_charge_limit'')|float -  states(''sensor.tesla_battery_level'')|float)
        * (state_attr(''schedule.heures_pleines'', ''next_event'') - now()) / timedelta(
        hours = states(''sensor.tesla_time_to_full_charge'') | float) + states(''sensor.tesla_battery_level'')|float)
        | round(0)}}'
      actual_end_date: '{{ (now() + timedelta(hours = states("sensor.tesla_time_to_full_charge")
        |float)).strftime("%H:%M") }}'
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "️\U0001F697 Tesla"
      message: La recharge est prevue de finir après la fin des heures creuse ({{actual_end_date}}).
        Pense à reduire la cibe de recharge vers {{new_target_percentage}}%
      click_ur: /lovelace/tesla
      icon: mdi:car
      color: deep-orange
      tag: tesla_end_charge_after_off_peak_hours
  mode: single
- id: '1688139412657'
  alias: Réveil intelligent - Régler heures de déclenchement
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_datetime.wake_up_time
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{today_at(states(''input_datetime.wake_up_time'')) - timedelta(minutes
        = 5)}}'
    target:
      entity_id: input_datetime.wake_up_time_lights
  - service: input_datetime.set_datetime
    data:
      datetime: '{{today_at(states(''input_datetime.wake_up_time'')) - timedelta(minutes
        = 30)}}'
    target:
      entity_id: input_datetime.wake_up_time_coffee_maker
  mode: single
- id: '1688139621896'
  alias: Réveil intelligent - Allumer lumières
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wake_up_time_lights
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.workday_today
    state: 'on'
  action:
  - service: script.wake_up
    data: {}
  mode: single
- id: '1688139704214'
  alias: Réveil intelligent - Allumer machine à café
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wake_up_time_coffee_maker
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.workday_today
    state: 'on'
  - condition: state
    entity_id: input_boolean.wake_up_automation_control_coffee_maker
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.coffeemaker
  mode: single
- id: '1688140625614'
  alias: Réveil intelligent - Régler heure réveil via téléphone JL
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.pixel_6_next_alarm
    not_from: unavailable
    not_to: unavailable
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  - condition: template
    value_template: '{{ states(''input_datetime.wake_up_time'') != (((state_attr(''sensor.pixel_6_next_alarm'',
      ''Time in Milliseconds'') | int / 1000)) | timestamp_custom(''%H:%M:%S'')) }}'
  action:
  - variables:
      human_readable_phone_alarm: '{{(((state_attr(''sensor.pixel_6_next_alarm'',
        ''Time in Milliseconds'') | int / 1000)) | timestamp_custom(''%H:%M''))}}'
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: ⏰ Alarme réglée pour {{human_readable_phone_alarm}}
      message: Utiliser pour le réveil inteligent ?
      callback:
      - title: Oui
        event: set_new_wake_up_time
      click_ur: /dashboard-automatisations/automatisations
      icon: mdi:alarm
      tag: jl_phone_alarm_changed
  mode: single
- id: '1688143290196'
  alias: Réveil intelligent - Régler heure réveil via téléphone JL (Confirmation)
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: set_new_wake_up_time
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    data:
      timestamp: '{{as_timestamp(states(''sensor.pixel_6_next_alarm''))}}'
    target:
      entity_id: input_datetime.wake_up_time
  mode: single
- id: '1688301259694'
  alias: TV intelligente - Allumer KEF quand TV allumée
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_tv_on
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: state
    entity_id: script.turn_on_media_center
    state: 'off'
  - condition: state
    entity_id: media_player.kef
    state: 'off'
  action:
  - service: script.turn_on_media_center
    data: {}
  mode: single
- id: '1688301320320'
  alias: 'TV intelligente - Éteindre KEF quand TV éteinte '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_tv_on
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: state
    entity_id: script.turn_off_media_center
    state: 'off'
  - condition: state
    entity_id: media_player.kef
    state: 'on'
  action:
  - service: script.turn_off_media_center
    data: {}
  mode: single
- id: '1688303443168'
  alias: 'TV intelligente - Controller Lumières '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.tv_cast
    from:
    to:
    variables:
      from_state: '{{trigger.from_state.state}}'
      to_state: '{{trigger.to_state.state}}'
      from_app: "{% if 'app_name' in trigger.from_state.attributes -%}\n  {{trigger.from_state.attributes.app_name}}\n{%-
        else -%}\n  no_app\n{%- endif %}"
      to_app: "{% if 'app_name' in trigger.to_state.attributes -%}\n  {{trigger.to_state.attributes.app_name}}\n{%-
        else -%}\n  no_app\n{%- endif %}"
      supported_apps: '{{["Netflix", "Plex", "Prime Video"]}}'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{from_state in ["off", "paused", "idle", "buffering"] and
          to_state == "playing" and to_app in supported_apps}}'
      sequence:
      - service: script.lights_set_tv
        data: {}
    - conditions:
      - condition: template
        value_template: '{{from_state == "playing" and to_state in ["paused", "buffering"]
          and to_app in supported_apps}}'
      sequence:
      - service: script.lights_set_tv_paused
        data: {}
    - conditions:
      - condition: template
        value_template: '{{from_state in ["playing" , "paused", "buffering"] and to_state
          in ["off" , "idle"] and from_app in supported_apps}}'
      sequence:
      - service: script.reset_lights_day_area
        data: {}
  mode: queued
  max: 10
- id: '1688305917710'
  alias: TV intelligente - Controller Lumières (PS5)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_ps5_used
    from: 'off'
    to: 'on'
    id: 'on'
  - platform: state
    entity_id:
    - binary_sensor.is_ps5_used
    from: 'on'
    to: 'off'
    id: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
    enabled: true
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.lights_set_tv
        data: {}
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: script.reset_lights_day_area
        data: {}
  mode: single
- id: '1688329966467'
  alias: Volet - Edge Cases
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: cover
      service: open_cover
      service_data:
        entity_id: cover.living_room_cover
    id: open
  - platform: event
    event_type: call_service
    event_data:
      domain: cover
      service: close_cover
      service_data:
        entity_id: cover.living_room_cover
    id: closed
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: open
      - condition: state
        entity_id: cover.living_room_cover
        attribute: current_position
        state: 100
    - condition: and
      conditions:
      - condition: trigger
        id: closed
      - condition: state
        entity_id: cover.living_room_cover
        attribute: current_position
        state: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: open
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.volet_salon_bouton_up_fallback
    - conditions:
      - condition: trigger
        id: closed
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.volet_salon_bouton_down_fallback
  mode: single
- id: '1688333037837'
  alias: Chauffage intelligent - Choisir Planning
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.all_openings
    for:
      hours: 0
      minutes: 1
      seconds: 0
    to: 'on'
    id: open
  - platform: state
    entity_id:
    - binary_sensor.all_openings
    to: 'off'
    id: closed
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    to: 'on'
    id: present
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    to: 'off'
    id: absent
  condition:
  - condition: state
    entity_id: input_boolean.automation_heat_home
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: open
      sequence:
      - service: input_select.select_option
        data:
          option: Frost Guard
        target:
          entity_id: input_select.heating_schedule_selector
    - conditions:
      - condition: trigger
        id: present
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.all_openings
            state: 'on'
            for:
              hours: 0
              minutes: 1
              seconds: 0
          sequence:
          - service: input_select.select_option
            data:
              option: Frost Guard
            target:
              entity_id: input_select.heating_schedule_selector
        default:
        - service: input_select.select_option
          data:
            option: Présent
          target:
            entity_id: input_select.heating_schedule_selector
    - conditions:
      - condition: trigger
        id: absent
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.all_openings
            state: 'on'
            for:
              hours: 0
              minutes: 1
              seconds: 0
          sequence:
          - service: input_select.select_option
            data:
              option: Frost Guard
            target:
              entity_id: input_select.heating_schedule_selector
        default:
        - service: input_select.select_option
          data:
            option: Absent
          target:
            entity_id: input_select.heating_schedule_selector
    - conditions:
      - condition: trigger
        id: closed
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.home_occupied
            state: 'on'
          sequence:
          - service: input_select.select_option
            data:
              option: Présent
            target:
              entity_id: input_select.heating_schedule_selector
        - conditions:
          - condition: state
            entity_id: binary_sensor.home_occupied
            state: 'off'
          sequence:
          - service: input_select.select_option
            data:
              option: Absent
            target:
              entity_id: input_select.heating_schedule_selector
  mode: single
- id: '1688333375509'
  alias: Chauffage intelligent - Changer Température
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.heating_target_temperature
    to:
  condition:
  - condition: state
    entity_id: input_boolean.automation_heat_home
    state: 'on'
  action:
  - service: climate.set_temperature
    target:
      entity_id: climate.netatmo
    data:
      temperature: '{{trigger.to_state.state}}'
  mode: single
- id: '1688333506527'
  alias: Chauffage intelligent - Vérifier cohérence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - climate.netatmo
    attribute: temperature
  condition:
  - condition: state
    entity_id: input_boolean.automation_heat_home
    state: 'on'
  - condition: template
    value_template: '{{states("sensor.heating_target_temperature") | float != state_attr("climate.netatmo","temperature")}}'
  action:
  - service: climate.set_temperature
    target:
      entity_id: climate.netatmo
    data:
      temperature: '{{states(''sensor.heating_target_temperature'')}}'
  mode: single
